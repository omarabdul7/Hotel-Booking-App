{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdul/Desktop/databases/src/components/BookingComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingComponent() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedRoom,\n    checkinDate,\n    checkoutDate\n  } = location.state || {};\n  const [customer, setCustomer] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCustomer(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const submitBooking = () => {\n    fetch('http://localhost:3001/verify-customer', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: customer.email,\n        password: customer.password\n      })\n    }).then(response => {\n      if (!response.ok) throw new Error('Invalid credentials');\n      return response.json();\n    }).then(data => {\n      if (data.isValid) {\n        // Assuming you have selectedRoom and data.customerID at this point\n        return fetch('http://localhost:3001/create-booking', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            customerID: data.customerID,\n            roomID: selectedRoom.Room_ID\n          })\n        });\n      }\n    }).then(response => {\n      if (!response.ok) throw new Error('Booking creation failed');\n      return response.json();\n    }).then(data => {\n      console.log('Booking success:', data);\n      navigate('/booking-confirmation', {\n        state: {\n          bookingID: data.bookingID\n        }\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('Error processing your booking. Please check your credentials and try again.');\n    });\n  };\n  if (!selectedRoom) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No room selected for booking.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Booking for \", selectedRoom.Name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [selectedRoom.Street, \", \", selectedRoom.City, \", \", selectedRoom.Country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        submitBooking();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: customer.email,\n        onChange: handleChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\" // Ensure to use type=\"password\" for the password input\n        ,\n        name: \"password\",\n        value: customer.password,\n        onChange: handleChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingComponent, \"eouvdcDKiWG8twd2eEtgpvG1ijY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = BookingComponent;\nexport default BookingComponent;\nvar _c;\n$RefreshReg$(_c, \"BookingComponent\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","BookingComponent","_s","location","navigate","selectedRoom","checkinDate","checkoutDate","state","customer","setCustomer","email","password","handleChange","e","name","value","target","prevState","submitBooking","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","isValid","customerID","roomID","Room_ID","console","log","bookingID","catch","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","Name","Street","City","Country","onSubmit","preventDefault","onChange","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/omarabdul/Desktop/databases/src/components/BookingComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction BookingComponent() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { selectedRoom, checkinDate, checkoutDate } = location.state || {};\n\n  const [customer, setCustomer] = useState({\n    email: '',\n    password: '', \n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCustomer(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const submitBooking = () => {\n    fetch('http://localhost:3001/verify-customer', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email: customer.email, password: customer.password }),\n    })\n    .then(response => {\n      if (!response.ok) throw new Error('Invalid credentials');\n      return response.json();\n    })\n    .then(data => {\n      if (data.isValid) {\n        // Assuming you have selectedRoom and data.customerID at this point\n        return fetch('http://localhost:3001/create-booking', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ customerID: data.customerID, roomID: selectedRoom.Room_ID }),\n        });\n      }\n    })\n    .then(response => {\n      if (!response.ok) throw new Error('Booking creation failed');\n      return response.json();\n    })\n    .then(data => {\n      console.log('Booking success:', data);\n      navigate('/booking-confirmation', { state: { bookingID: data.bookingID } });\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      alert('Error processing your booking. Please check your credentials and try again.');\n    });\n  };\n  \n\n  if (!selectedRoom) {\n    return <p>No room selected for booking.</p>;\n  }\n\n  return (\n    <div>\n      <h2>Booking for {selectedRoom.Name}</h2> {/* Adjust according to your data structure */}\n      <p>{selectedRoom.Street}, {selectedRoom.City}, {selectedRoom.Country}</p>\n      <form onSubmit={e => {\n        e.preventDefault();\n        submitBooking();\n      }}>\n        <input\n          name=\"email\"\n          value={customer.email}\n          onChange={handleChange}\n          placeholder=\"Email\"\n        />\n        <input\n          type=\"password\" // Ensure to use type=\"password\" for the password input\n          name=\"password\"\n          value={customer.password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n        />\n        <button type=\"submit\">Submit Booking</button>\n      </form>\n    </div>\n  );\n}\n\nexport default BookingComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}