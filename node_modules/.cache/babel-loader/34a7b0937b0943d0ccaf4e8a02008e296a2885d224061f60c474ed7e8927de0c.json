{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdul/Desktop/hotel-booking/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [checkin, setCheckin] = useState('');\n  const [checkout, setCheckout] = useState('');\n  const [capacity, setCapacity] = useState('');\n  const [rating, setRating] = useState('');\n  const handleSearch = () => {\n    if (!checkin || !checkout) {\n      alert('Please select both check-in and check-out dates.');\n      return;\n    }\n    if (new Date(checkin) > new Date(checkout)) {\n      alert('Check-in date cannot be after check-out date.');\n      return;\n    }\n    const url = new URL('http://localhost:3001/search');\n    url.searchParams.append('checkin', checkin);\n    url.searchParams.append('checkout', checkout);\n    if (capacity) url.searchParams.append('capacity', capacity);\n    if (rating) url.searchParams.append('rating', rating);\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setRooms(data);\n    }).catch(error => {\n      console.error('Error fetching available rooms:', error);\n    });\n  };\n  const containerStyle = {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto'\n  };\n  const buttonStyle = {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginBottom: '20px'\n  };\n  const inputStyle = {\n    padding: '10px',\n    margin: '0 10px 20px 0',\n    borderRadius: '5px',\n    border: '1px solid #ddd',\n    width: '150px',\n    // Set a specific width or use a percentage if preferable\n    display: 'inline-block' // This makes the input align correctly if they are all set to inline-block\n  };\n  const labelStyle = {\n    margin: '0 10px 20px 0',\n    display: 'inline-block',\n    // Aligns the label with the inputs\n    width: '60px' // Adjust the width as needed\n  };\n  const titleStyle = {\n    textAlign: 'center',\n    color: '#333'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: titleStyle,\n      children: \"Room Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: checkin,\n      onChange: e => setCheckin(e.target.value),\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: checkout,\n      onChange: e => setCheckout(e.target.value),\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Capacity\",\n      value: capacity,\n      onChange: e => setCapacity(e.target.value),\n      min: \"0\",\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rating\",\n      style: labelStyle,\n      children: \"Rating:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"rating\",\n      type: \"number\",\n      placeholder: \"1-5\",\n      value: rating,\n      onChange: e => setRating(e.target.value),\n      min: \"1\",\n      max: \"5\",\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: buttonStyle,\n      children: \"Search Available Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"kI9idnwCe9x9wpiN1bZORO1+a14=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","_s","rooms","setRooms","checkin","setCheckin","checkout","setCheckout","capacity","setCapacity","rating","setRating","handleSearch","alert","Date","url","URL","searchParams","append","fetch","then","response","ok","Error","status","json","data","catch","error","console","containerStyle","padding","maxWidth","margin","buttonStyle","backgroundColor","color","border","borderRadius","cursor","marginBottom","inputStyle","width","display","labelStyle","titleStyle","textAlign","style","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","min","htmlFor","id","max","onClick","_c","$RefreshReg$"],"sources":["/Users/omarabdul/Desktop/hotel-booking/src/components/Search.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Search() {\n  const [rooms, setRooms] = useState([]);\n  const [checkin, setCheckin] = useState('');\n  const [checkout, setCheckout] = useState('');\n  const [capacity, setCapacity] = useState('');\n  const [rating, setRating] = useState('');\n\n  const handleSearch = () => {\n    if (!checkin || !checkout) {\n      alert('Please select both check-in and check-out dates.');\n      return;\n    }\n\n    if (new Date(checkin) > new Date(checkout)) {\n      alert('Check-in date cannot be after check-out date.');\n      return;\n    }\n\n    const url = new URL('http://localhost:3001/search');\n    url.searchParams.append('checkin', checkin);\n    url.searchParams.append('checkout', checkout);\n    if (capacity) url.searchParams.append('capacity', capacity);\n    if (rating) url.searchParams.append('rating', rating);\n\n    fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        setRooms(data);\n      })\n      .catch(error => {\n        console.error('Error fetching available rooms:', error);\n      });\n  };\n  const containerStyle = {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto',\n  };\n\n  const buttonStyle = {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    marginBottom: '20px',\n  };\n\n  const inputStyle = {\n    padding: '10px',\n    margin: '0 10px 20px 0',\n    borderRadius: '5px',\n    border: '1px solid #ddd',\n    width: '150px', // Set a specific width or use a percentage if preferable\n    display: 'inline-block' // This makes the input align correctly if they are all set to inline-block\n  };\n\n  const labelStyle = {\n    margin: '0 10px 20px 0',\n    display: 'inline-block', // Aligns the label with the inputs\n    width: '60px' // Adjust the width as needed\n  };\n\n  const titleStyle = {\n    textAlign: 'center',\n    color: '#333',\n  };\n\n  return (\n    <div style={containerStyle}>\n      <h2 style={titleStyle}>Room Search</h2>\n      <input\n        type=\"date\"\n        value={checkin}\n        onChange={e => setCheckin(e.target.value)}\n        style={inputStyle}\n      />\n      <input\n        type=\"date\"\n        value={checkout}\n        onChange={e => setCheckout(e.target.value)}\n        style={inputStyle}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Capacity\"\n        value={capacity}\n        onChange={e => setCapacity(e.target.value)}\n        min=\"0\"\n        style={inputStyle}\n      />\n      <label htmlFor=\"rating\" style={labelStyle}>Rating:</label>\n      <input\n        id=\"rating\"\n        type=\"number\"\n        placeholder=\"1-5\"\n        value={rating}\n        onChange={e => setRating(e.target.value)}\n        min=\"1\"\n        max=\"5\"\n        style={inputStyle}\n      />\n      <button onClick={handleSearch} style={buttonStyle}>\n        Search Available Rooms\n      </button>\n      {/* ... (room list rendering) ... */}\n    </div>\n  );\n}\n\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}